paths:
  /api/carts:
    get:
      summary: Get all carts (you need to be an user)
      tags:
        - Carts
      responses:
        '200':
          description: Carts were returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/AllCarts'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new cart (you need to be an user)
      tags:
        - Carts
      responses:
        '201':
          description: The cart was created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/CreateCart'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{cid}/products/{pid}:
    post:
      summary: Add product to cart (you need to be a user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        '201':
          description: Product successfully added to cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update product quantity to cart (you need to be an user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/UpdateProductQuantity'
      responses:
        '200':
          description: Product quantity successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProductCartQuantity'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Removed product from cart (you need to be an user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id
          schema:
            type: string
        - name: pid
          in: path
          required: true
          description: Product id
          schema:
            type: string
      responses:
        '200':
          description: Product remove successfully from cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveCart'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{cid}:
    get:
      summary: Get a cart by id (you need to be an user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Id of the cart being searched
          schema:
            $type: String
      responses:
        '200':
          description: Cart found correctly
          content:
            application/json:
              schema:
                $ref: '#components/schemas/PopulateProduct'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a cart by id (you need to be an user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to update
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/BodyUpdateProductCart'
      responses:
        '200':
          description: Cart was updated successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/UpdateCart'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a cart by id (you need to be an user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart id to delete
          schema:
            $type: String
      responses:
        '200':
          description: Cart was deleted successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/EmptyCart'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{cid}/purchase:
    post:
      summary: Complete the purchase (you need to be an user)
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Purchase cart id
          schema:
            $type: String
      responses:
        '201':
          description: Purchase completed successfully
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Purchase'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
      example: { code: 500, name: 'Internal Server Error', cause: 'Something unexpected happened...', message: 'Error server. Usually generating the query or the connection to the DB fails' }
    AllCarts:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Cart Id autogenerated by MongoDB
        products:
          type: Array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: ObjectId
                description: Product ID in cart
              quantity:
                type: Number
                description: Product quantity in cart
      example:
        status: success
        msg: Carts list
        payload:
          - _id: 65122f9cc8a3c46a9e174d62
            products:
              - product: 6508cc7156a024d698a8db17
                quantity: 1
                _id: 6514c3f55f5d147f29d7d82a
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: Cart Id autogenerated by MongoDB
        products:
          type: array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: string
                description: Product ID in cart
              quantity:
                type: integer
                description: Product quantity in cart
      example:
        status: success
        msg: Product add to cart
        payload:
          _id: 651230d3c8a3c46a9e174d79
          products:
            - product: 6508cd6756a024d698a8db1c
              quantity: 1
              _id: 6519790f989548593938db5c
    CreateCart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Cart Id autogenerated by MongoDB
        products:
          type: Array
          description: List of products in the cart
      example:
        status: success
        msg: Cart created
        payload:
          _id: 6517566a90086141183e59a0
          products: []
    UpdateCart:
      type: object
      properties:
        _id:
          type: string
          description: Cart Id autogenerated by MongoDB
        products:
          type: array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: string
                description: Product ID in cart
              quantity:
                type: integer
                description: Product quantity in cart
      example:
        status: success
        msg: Cart updated successfully
        payload:
          _id: 65122f9cc8a3c46a9e174d62
          products:
            - product: 6508ce2d56a024d698a8db20
              quantity: 8
              _id: 6519beccd295471d0436a34d
    UpdateProductCartQuantity:
      type: object
      properties:
        _id:
          type: string
          description: Cart Id autogenerated by MongoDB
        products:
          type: array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: string
                description: Product ID in cart
              quantity:
                type: integer
                description: Product quantity in cart
      example:
        status: success
        msg: Product quantity updated
        payload:
          _id: '651230d3c8a3c46a9e174d79'
          products:
            - product: '6508cd6756a024d698a8db1c'
              quantity: 5
              _id: '6519790f989548593938db5c'
    RemoveCart:
      type: object
      properties:
        _id:
          type: string
          description: Cart Id autogenerated by MongoDB
        products:
          type: array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: string
                description: Product ID in cart
              quantity:
                type: integer
                description: Product quantity in cart
      example:
        status: success
        msg: Product removed from cart
        payload:
          _id: 651230d3c8a3c46a9e174d79
          products:
            - product: 6508cd6756a024d698a8db1c
              quantity: 1
              _id: 6519790f989548593938db5c
    EmptyCart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Cart Id autogenerated by MongoDB
        products:
          type: Array
          description: List of products in the cart
      example:
        status: success
        msg: Cart cleared successfully
        payload:
          _id: 6517566a90086141183e59a0
          products: []
    PopulateProduct:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Cart Id autogenerated by MongoDB
        products:
          type: Array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: Array
                description: Product Id in cart
              quantity:
                type: Number
                description: Product quantity in cart
      example:
        status: success
        msg: Cart
        payload:
          _id: 65122f9cc8a3c46a9e174d62
          products:
            - product:
                _id: 6508cc7156a024d698a8db17
                title: Inteligente Acero Salchichas
                description: The Football Is Good For Training And Recreational Purposes
                code: pi5tkvspcl
                price: 1159
                status: true
                stock: 30
                category: banyan
                thumbnail: ['https://loremflickr.com/640/480']
                owner: adminCoder@coder.com
              quantity: 1
              _id: 6514c3f55f5d147f29d7d82a
    Purchase:
      type: object
      properties:
        status:
          type: string
        msg:
          type: string
        ticket:
          type: string
        productProcessed:
          type: Array
          description: List of products procesed in the cart
          items:
            type: object
            properties:
              productId:
                type: ObjectId
                description: Product Id in cart
              quantity:
                type: Number
                description: Product quantity in cart
              status:
                type: Boolean
                description: Product status in cart
        productsNotProcessed:
          type: Array
          description: List of products not procesed in the cart
          items:
            type: object
            properties:
              productId:
                type: ObjectId
                description: Product Id in cart
              quantity:
                type: Number
                description: Product quantity in cart
              status:
                type: Boolean
                description: Product status in cart
      example:
        status: success
        msg: Thanks for your purchase
        ticket: 651b55ca9a0a9663d22dab3e
        productProcessed:
          - productId: 6508cd6756a024d698a8db1c
            quantity: 1
            status: true
          - productId: 6508cc7156a024d698a8db17
            quantity: 5
            status: true
          - productId: 6508cdd156a024d698a8db1e
            quantity: 3
            status: true
        productsNotProcessed:
          - productId: 651b4bfa3a1913f4e287b44e
            quantity: 1
            status: false
  requestBodies:
    UpdateProductQuantity:
      type: object
      properties:
        quantity:
          type: Number
          description: Product quantity in cart
      example:
        quantity: 5
    BodyUpdateProductCart:
      type: object
      properties:
        products:
          type: Array
          description: List of products in the cart
          items:
            type: object
            properties:
              product:
                type: ObjectId
                description: Product Id in cart
              quantity:
                type: Number
                description: Product quantity in cart
      example:
        products: [{ product: '6508ce2d56a024d698a8db20', quantity: 9 }]
